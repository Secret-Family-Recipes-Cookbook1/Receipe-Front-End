[{"/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/index.js":"1","/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/App.js":"2","/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/reportWebVitals.js":"3","/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/signup/signup.js":"4","/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/login/login.js":"5","/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/navigation/navbar.js":"6","/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/validation/loginValidation.js":"7","/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/dashboard/dashboard.js":"8","/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/validation/signupValidation.js":"9","/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/recipe/recipe.js":"10","/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/validation/recipeValidation.js":"11","/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/recipecard/recipecard.js":"12"},{"size":1029,"mtime":1612311703063,"results":"13","hashOfConfig":"14"},{"size":577,"mtime":1612230158795,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1612188722301,"results":"16","hashOfConfig":"14"},{"size":7271,"mtime":1612312757148,"results":"17","hashOfConfig":"14"},{"size":5189,"mtime":1612312763837,"results":"18","hashOfConfig":"14"},{"size":1436,"mtime":1612343742343,"results":"19","hashOfConfig":"14"},{"size":339,"mtime":1612299051109,"results":"20","hashOfConfig":"14"},{"size":292,"mtime":1612479915132,"results":"21","hashOfConfig":"14"},{"size":511,"mtime":1612307921865,"results":"22","hashOfConfig":"14"},{"size":5678,"mtime":1612380579620,"results":"23","hashOfConfig":"14"},{"size":616,"mtime":1612381180673,"results":"24","hashOfConfig":"14"},{"size":798,"mtime":1612480106718,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1vamxgx",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/index.js",[],["55","56"],"/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/App.js",["57","58"],"/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/reportWebVitals.js",[],"/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/signup/signup.js",["59","60","61"],"import React, { useState, useEffect } from \"react\";\nimport  './signup.css'\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Form,  FormGroup, Label, Input, Button   } from 'reactstrap';\nimport * as yup from 'yup';\nimport schema from '../validation/signupValidation'\n\n\n\nexport default function Signup(props) {\n \n\n    const [signupFormState, setsignupFormState] = useState({\n        firstname: '',\n        lastname: '',\n        email: '',\n        password: '',\n        terms: false,\n    })\n\n\n    const [errors, setErrors] = useState({ firstname: '', lastname: '', password: '', terms: '' })\n    const [disabled, setDisabled] = useState(true)\n\n    const setFormErrors = (name, value) => {\n        yup.reach(schema, name).validate(value)\n            .then(() => setErrors({ ...errors, [name]: '' }))\n            .catch(err => setErrors({ ...errors, [name]: err.errors[0] }))\n    }\n\n\n    const change = event => {\n        const { checked, value, name, type } = event.target\n        const valueChecked = type === 'checkbox' ? checked : value\n        setFormErrors(name, valueChecked)\n        setsignupFormState({ ...signupFormState, [name]: valueChecked })\n    }\n\n    const submit = event => {\n        event.preventDefault()\n        props.history.push(\"/dashboard\")\n        // let path = `newPath`; \n        //  history.push(path);\n    }\n\n    useEffect(() => {\n        schema.isValid(signupFormState).then(valid => setDisabled(!valid))\n    }, [signupFormState])\n    return (\n        <div className=\"login-container\">\n            <img className=\"header-img\"\n                src=\"https://media.istockphoto.com/photos/tasty-pepperoni-pizza-and-cooking-ingredients-tomatoes-basil-on-black-picture-id1083487948\"\n            ></img>\n\n            <div className=\"login-form-container\">\n                <div className=\"login-title-form-container\">\n                    <img className=\"logo-img\"\n                        src=\"https://raw.githubusercontent.com/Secret-Family-Recipes-Cookbook1/Front-End/main/sec-family-rec-book/src/images/recipe.jpg\"\n                    ></img>\n                    <h1 className=\"logo-name\"> RecipeCookbook</h1>\n                </div>\n\n                <div className=\"login-sub-title-form-container\">\n                    <h3>Create your account</h3>\n                </div>\n\n                <div className=\"login-form\">\n                    <Form className='form-container'\n                        onSubmit={submit} >\n\n                        <div className=\"sign-up-row\">\n                            <FormGroup>\n                                <Label>First name</Label>\n                                <Input\n                                    name='firstname'\n                                    type='text'\n                                    onChange={change}\n                                    value={signupFormState.firstname}\n                                    className=\"form-control-signup\"\n                                    placeholder='enter email'\n                                    maxLength='35'\n                                />\n                                <div className='error-msg' style={{ color: 'red' }}>\n                                    <div>{errors.firstname}</div>\n                                </div>\n                            </FormGroup>\n\n                            <div className=\"space-div\"></div>\n\n                            <FormGroup>\n                                <Label>Last name</Label>\n                                <Input\n                                    name='lastname'\n                                    type='text'\n                                    onChange={change}\n                                    value={signupFormState.lastname}\n                                    className=\"form-control-signup\"\n                                    placeholder='enter password'\n                                />\n                                <div className='error-msg' style={{ color: 'red' }}>\n                                    <div>{errors.lastname}</div>\n                                </div>\n                            </FormGroup>\n                        </div>\n\n                        <div className=\"space-div\"></div>\n\n                        <div className=\"sign-up-row\">\n                            <FormGroup>\n                                <Label>Email</Label>\n                                <Input\n                                    name='email'\n                                    type='email'\n                                    onChange={change}\n                                    value={signupFormState.email}\n                                    className=\"form-control-signup\"\n                                    placeholder='enter email'\n                                    maxLength='35'\n                                />\n                                <div className='error-msg' style={{ color: 'red' }}>\n                                    <div>{errors.email}</div>\n                                </div>\n                            </FormGroup>\n                            <div className=\"space-div\"></div>\n                            <FormGroup>\n                                <Label>Password</Label>\n                                <Input\n                                    name='password'\n                                    type='password'\n                                    onChange={change}\n                                    value={signupFormState.password}\n                                    className=\"form-control-signup\"\n                                    placeholder='enter password'\n                                />\n                                <div className='error-msg' style={{ color: 'red' }}>\n                                    <div>{errors.password}</div>\n                                </div>\n                            </FormGroup>\n                        </div>\n\n                        <div className=\"horizontal-login-components\">\n                            <FormGroup check>\n                                <Label check\n                                    className=\"check-box\">\n                                    <Input\n                                        onChange={change}\n                                        name='terms'\n                                        type='checkbox'\n                                        value={signupFormState.terms}\n                                    />{' '}\n                              I agree to the Terms, Privacy Policy and Fees\n                          </Label>\n                                <div className='error-msg' style={{ color: 'red' }}>\n                                    <div>{errors.terms}</div>\n                                </div>\n                            </FormGroup>\n\n                        </div>\n\n                        <Button disabled={disabled} className=\"submit-btn\">Sign up</Button>\n                    </Form>\n\n                    <div className=\"horizontal-login-bottom-components\">\n                        <p> Alredy have an account </p>\n                        <Link to=\"/login\"><p className=\"sign-up-text\"> Login</p></Link>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}   ","/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/login/login.js",["62","63","64","65"],"import React, { useState, useEffect } from \"react\";\nimport  './login.css'\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Form,  FormGroup, Label, Input, Button   } from 'reactstrap';\nimport * as yup from 'yup';\nimport schema from '../validation/loginValidation'\n\n\nexport default function Login(props) {\n\n    \n     const [loginFormState , setloginFormState] = useState({\n        email: '', \n        password: '', \n        rememberMe: false,\n     })\n\n    const [errors, setErrors] = useState({name: '', password: ''})\n    const [disabled, setDisabled] = useState(true)\n\n    const setFormErrors = (name, value) => {\n        yup.reach(schema, name).validate(value)\n        .then( () => setErrors({...errors, [name]: ''}))\n        .catch(err => setErrors({...errors, [name]: err.errors[0]}))\n    }\n\n    const change = event => {\n        const { checked, value, name, type } = event.target\n        const valueChecked = type === 'checkbox'  ? checked : value\n        setFormErrors(name, valueChecked)\n        setloginFormState({...loginFormState , [name]: valueChecked})\n        }\n\n    const submit = event => {\n        event.preventDefault()\n        props.history.push(\"/dashboard\")\n        // let path = `/dashboard`; \n        // history.push(path);\n        }\n\n     useEffect( () => {\n            schema.isValid(loginFormState).then(valid => setDisabled(!valid))\n        }, [loginFormState])    \n\n    return (\n        <div className=\"login-container\">\n            <img className=\"header-img\"\n              src=\"https://media.istockphoto.com/photos/tasty-pepperoni-pizza-and-cooking-ingredients-tomatoes-basil-on-black-picture-id1083487948\"\n              ></img>\n            \n            <div className=\"login-form-container\">\n                <div className=\"login-title-form-container\">\n                   <img className=\"logo-img\"\n                       src=\"https://raw.githubusercontent.com/Secret-Family-Recipes-Cookbook1/Front-End/main/sec-family-rec-book/src/images/recipe.jpg\"\n                   ></img>\n                    <h1 className=\"logo-name\"> RecipeCookbook</h1>\n                </div>\n\n                <div className=\"login-sub-title-form-container\">\n                    <h3>Login to your account</h3>\n                </div>\n\n                <div className=\"login-form\">\n                    <Form className='form-container'\n                        onSubmit={submit} >\n\n                        <FormGroup>\n                            <Label>Email</Label>\n                            <Input\n                                name='email'\n                                type='email'\n                                onChange={change}\n                                value={loginFormState.email}\n                                className=\"form-control-login\"\n                                placeholder='enter email'\n                                maxLength='35'\n                            />\n                            <div className='error-msg' style={{ color: 'red' }}>\n                            <div>{errors.email}</div>\n                            </div>\n                        </FormGroup>\n                        <div className = \"space-div\"></div>\n                        <FormGroup>\n                            <Label>password</Label>\n                            <Input\n                                name='password'\n                                type='password'\n                                onChange={change}\n                                value={loginFormState.password}\n                                className=\"form-control-login\"\n                                placeholder='enter password'\n                            />  \n                            <div className='error-msg' style={{ color: 'red' }}>\n                                <div>{errors.password}</div>\n                            </div>\n                        </FormGroup>\n\n                        <div className=\"horizontal-login-components\">\n                            <FormGroup check>\n                                <Label check \n                                 className = \"check-box\">\n                                    <Input\n                                        onChange={change}\n                                        name='rememberMe'\n                                        type='checkbox'\n                                        value={loginFormState.rememberMe}\n                                    />{' '}\n                                    Remember Me\n                                </Label>\n                            </FormGroup>\n\n                            <a href=\"\"> <p className = \"reset-text\"> Reset Password?</p></a>\n                        </div>\n\n                        <Button disabled={disabled}  className= \"submit-btn\">Sign in</Button>\n                    </Form>\n                     \n                    <div className=\"horizontal-login-bottom-components\">\n                       <p> Dont have an account yet?</p>\n                       <Link to=\"/signup\"><p className= \"sign-up-text\"> Join RecipeCookbook</p></Link>\n                       \n                     </div>\n                </div>\n            </div>\n        </div>\n    )\n}","/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/navigation/navbar.js",["66"],"import React from \"react\"; \nimport {\n    Navbar,\n    NavItem,\n  } from 'reactstrap';\nimport  './navbar.css'\nimport { Link } from \"react-router-dom\";\n\nexport default function navbar() {\n\n    return (\n        <div>\n            <Navbar className= \"nav-bar\">\n                \n                <img className=\"nav-bar-logo-img\"\n                    src=\"https://raw.githubusercontent.com/Secret-Family-Recipes-Cookbook1/Front-End/main/sec-family-rec-book/src/images/recipe.jpg\"\n                ></img>\n                  <div className= \"nav-sub-bar\">\n                    <Link to=\"/dashboard\" className = \"nav-link\">\n                        <NavItem className = \"nav-item\">\n                            Dashboard\n                        </NavItem>\n                    </Link>\n\n                    <div className = \"space-div\"></div>\n                  \n                    <Link to=\"/recipe\" className = \"nav-link\">\n                        <NavItem className = \"nav-item\">\n                            Add a Recipe\n                        </NavItem>\n                    </Link>\n\n                    <div className = \"space-div\"></div>\n\n                    <Link to=\"/login\" className = \"nav-link\">\n                        <NavItem className = \"nav-item\">\n                            Log out\n                        </NavItem>\n                    </Link>\n                    \n                </div>   \n            </Navbar>\n        </div>\n     )\n}","/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/validation/loginValidation.js",[],"/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/dashboard/dashboard.js",[],"/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/validation/signupValidation.js",["67"],"import * as yup from \"yup\";\n\nexport default yup.object().shape({\n    firstname: yup\n    .string()\n    .required(\"username is required\"),\n    lastname: yup\n    .string()\n    .required(\"username is required\"),\n    email: yup\n    .string()\n    .email('invalid email')\n    .required('valid email address required'),\n    password: yup\n    .string()\n    .required('password required')\n    .min(5, \"password must be 5 chars long\"),\n    terms: yup\n    .boolean().\n    oneOf([true], 'Must check Terms of Service'),\n   })","/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/recipe/recipe.js",[],"/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/validation/recipeValidation.js",[],"/Users/noelobaseki/Desktop/lambdaSprints/RecipeFrontEnd/recipe-front-end/src/recipecard/recipecard.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":3,"column":9,"nodeType":"74","messageId":"75","endLine":3,"endColumn":15},{"ruleId":"72","severity":1,"message":"76","line":3,"column":17,"nodeType":"74","messageId":"75","endLine":3,"endColumn":22},{"ruleId":"72","severity":1,"message":"77","line":3,"column":16,"nodeType":"74","messageId":"75","endLine":3,"endColumn":26},{"ruleId":"78","severity":1,"message":"79","line":51,"column":13,"nodeType":"80","endLine":53,"endColumn":14},{"ruleId":"78","severity":1,"message":"79","line":57,"column":21,"nodeType":"80","endLine":59,"endColumn":22},{"ruleId":"72","severity":1,"message":"77","line":3,"column":16,"nodeType":"74","messageId":"75","endLine":3,"endColumn":26},{"ruleId":"78","severity":1,"message":"79","line":47,"column":13,"nodeType":"80","endLine":49,"endColumn":16},{"ruleId":"78","severity":1,"message":"79","line":53,"column":20,"nodeType":"80","endLine":55,"endColumn":21},{"ruleId":"81","severity":1,"message":"82","line":112,"column":29,"nodeType":"80","endLine":112,"endColumn":40},{"ruleId":"78","severity":1,"message":"79","line":15,"column":17,"nodeType":"80","endLine":17,"endColumn":18},{"ruleId":"83","severity":1,"message":"84","line":19,"column":15,"nodeType":"85","messageId":"86","endLine":19,"endColumn":16,"fix":"87"},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'useHistory' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"90","text":"91"},"no-global-assign","no-unsafe-negation",[454,460],"\n    ."]